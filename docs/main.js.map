{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/binding/Hello.ts","./src/app/binding/binding.component.ts","./src/app/binding/binding.component.html","./src/app/binding2-radio/Student.ts","./src/app/binding2-radio/binding2-radio.component.ts","./src/app/binding2-radio/binding2-radio.component.html","./src/app/binding2-selection/binding2-selection.component.ts","./src/app/binding2-selection/binding2-selection.component.html","./src/app/binding2-selection/roles.ts","./src/app/binding2/binding2.component.ts","./src/app/binding2/binding2.component.html","./src/app/diaglog/diaglog.component.ts","./src/app/diaglog/diaglog.component.html","./src/app/html-attribute/html-attribute.component.ts","./src/app/html-attribute/html-attribute.component.html","./src/app/input-keyup/input-keyup.component.ts","./src/app/input-keyup/input-keyup.component.html","./src/app/ng-class/ng-class.component.ts","./src/app/ng-class/ng-class.component.html","./src/app/ng-for/Customer.ts","./src/app/ng-for/ng-for.component.ts","./src/app/ng-for/ng-for.component.html","./src/app/ng-if/ng-if.component.ts","./src/app/ng-if/ng-if.component.html","./src/app/ng-style/ng-style.component.ts","./src/app/ng-style/ng-style.component.html","./src/app/ng-switch/Hero.ts","./src/app/ng-switch/ng-switch.component.ts","./src/app/ng-switch/ng-switch.component.html","./src/app/text-editor/text-editor.component.ts","./src/app/text-editor/text-editor.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { style } from '@angular/animations';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<nav>\r\n  <a [routerLink]=\"['/binding']\" routerLinkActive=\"active\">binding</a>\r\n  <a [routerLink]=\"['/binding-2way']\" routerLinkActive=\"active\">binding-2way</a>\r\n  <a [routerLink]=\"['/binding-radio']\" routerLinkActive=\"active\">binding-radio</a>\r\n  <a [routerLink]=\"['/binding-selection']\" routerLinkActive=\"active\">binding-selection'</a>\r\n  <a [routerLink]=\"['/html-attribute']\" routerLinkActive=\"active\">html-attribute</a>\r\n\r\n  <a [routerLink]=\"['/input-keyup']\" routerLinkActive=\"active\">input-keyup</a>\r\n  <a [routerLink]=\"['/ng-class']\" routerLinkActive=\"active\">ng-class</a>\r\n  <a [routerLink]=\"['/ng-style']\" routerLinkActive=\"active\">ng-style</a>\r\n  <a [routerLink]=\"['/ng-for']\" routerLinkActive=\"active\">ng-for</a>\r\n  <a [routerLink]=\"['/ng-switch']\" routerLinkActive=\"active\">ng-switch</a>\r\n  <a [routerLink]=\"['/text-editor']\" routerLinkActive=\"active\">text-editor</a>\r\n  <a [routerLink]=\"['/dialog']\" routerLinkActive=\"active\">dialog</a>\r\n</nav>\r\n<div class=\"app-router-outlet-layout\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<p>-------------------------------------------------------</p>\r\n<app-binding></app-binding>\r\n<app-binding2></app-binding2>\r\n\r\n<app-binding2-radio></app-binding2-radio>\r\n<app-binding2-selection></app-binding2-selection>\r\n<app-input-keyup></app-input-keyup>\r\n\r\n<app-html-attribute></app-html-attribute>\r\n\r\n<app-ng-class></app-ng-class>\r\n<app-ng-style></app-ng-style>\r\n\r\n<app-ng-if></app-ng-if>\r\n<app-ng-for></app-ng-for>\r\n\r\n<app-ng-switch></app-ng-switch>\r\n","import { AppRoutingModule } from './app.routes';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n//\nimport { AppComponent } from './app.component';\nimport { BindingComponent } from './binding/binding.component';\nimport { Binding2Component } from './binding2/binding2.component';\nimport { NgForComponent } from './ng-for/ng-for.component';\nimport { HtmlAttributeComponent } from './html-attribute/html-attribute.component';\nimport { NgClassComponent } from './ng-class/ng-class.component';\nimport { NgStyleComponent } from './ng-style/ng-style.component';\nimport { NgIfComponent } from './ng-if/ng-if.component';\nimport { NgSwitchComponent } from './ng-switch/ng-switch.component';\nimport { Binding2RadioComponent } from './binding2-radio/binding2-radio.component';\nimport { InputKeyupComponent } from './input-keyup/input-keyup.component';\nimport { Binding2SelectionComponent } from './binding2-selection/binding2-selection.component';\nimport { RouterModule } from '@angular/router';\nimport { TextEditorComponent } from './text-editor/text-editor.component';\nimport { DiaglogComponent } from './diaglog/diaglog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    BindingComponent,\n    Binding2Component,\n    NgForComponent,\n    HtmlAttributeComponent,\n    NgClassComponent,\n    NgStyleComponent,\n    NgIfComponent,\n    NgSwitchComponent,\n    Binding2RadioComponent,\n    InputKeyupComponent,\n    Binding2SelectionComponent,\n    TextEditorComponent,\n    DiaglogComponent,\n  ],\n  imports: [BrowserModule, FormsModule, RouterModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { DiaglogComponent } from './diaglog/diaglog.component';\nimport { TextEditorComponent } from './text-editor/text-editor.component';\nimport { Binding2SelectionComponent } from './binding2-selection/binding2-selection.component';\nimport { NgSwitchComponent } from './ng-switch/ng-switch.component';\nimport { NgStyleComponent } from './ng-style/ng-style.component';\nimport { NgForComponent } from './ng-for/ng-for.component';\nimport { NgClassComponent } from './ng-class/ng-class.component';\nimport { InputKeyupComponent } from './input-keyup/input-keyup.component';\nimport { HtmlAttributeComponent } from './html-attribute/html-attribute.component';\nimport { Binding2RadioComponent } from './binding2-radio/binding2-radio.component';\nimport { Binding2Component } from './binding2/binding2.component';\nimport { BindingComponent } from './binding/binding.component';\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n/**\n *  Typescript Object array => syntax giống Json (tường minh {\"key\": \"value\"})\n * cú pháp giống Json Array. Mỗi item là 1 Route\n * đấy là route cấp 1 của App.\n */\nconst appRoutes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'binding' },\n  { path: 'binding', component: BindingComponent },\n  { path: 'binding-2way', component: Binding2Component },\n  { path: 'binding-radio', component: Binding2RadioComponent },\n  { path: 'binding-selection', component: Binding2SelectionComponent },\n  { path: 'html-attribute', component: HtmlAttributeComponent },\n  { path: 'input-keyup', component: InputKeyupComponent },\n  { path: 'ng-class', component: NgClassComponent },\n  { path: 'ng-for', component: NgForComponent },\n  { path: 'ng-style', component: NgStyleComponent },\n  { path: 'ng-switch', component: NgSwitchComponent },\n  { path: 'text-editor', component: TextEditorComponent },\n  { path: 'dialog', component: DiaglogComponent },\n];\n\n@NgModule({\n  /**\n   * route bản chất là 1 module vì thế cần import\n   * RouterModule.forRoot(): chỉ đc call 1 lần duy nhất trong App. Còn lại là RouterModule.forChild() ở các module khác\n   */\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export class Hello {\r\n  id:number;\r\n  name: string;\r\n  age: number;\r\n  constructor(id: number, name: string, age: number){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.age = age;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Hello } from './Hello';\n\n@Component({\n  selector: 'app-binding',\n  templateUrl: './binding.component.html',\n  styleUrls: ['./binding.component.scss']\n})\nexport class BindingComponent implements OnInit {\n  // biến này đc gọi ở template html\n  title: string = 'binding.Component here:';\n  numberOfClick: number= 0;\n\n  user:Hello = new Hello(1,'Hungbeo', 40);\n\n  // function sẽ đc gọi ở template\n  public clickButton(){\n    this.numberOfClick++;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- title = variable in *.ts -->\n<div class=\"binding-component-layout\">\n  <h2>{{ title }}</h2>\n  <p>{{ user.name }}</p>\n\n  <!-- click event -->\n  <div (click)=\"clickButton()\" class=\"button\">click button</div>\n\n  <h1 style=\"color: blue\">{{ numberOfClick }}</h1>\n</div>\n","export class Student {\r\n  id: number;\r\n  name: string;\r\n  emotion: string;\r\n\r\n  constructor(id: number, name: string, emotion: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.emotion = emotion;\r\n  }\r\n}\r\n\r\nexport const STUDENTS: Student[] = [\r\n  new Student(1, 'hungbeo', 'happy'),\r\n  new Student(2, 'Hunggay', 'sad'),\r\n  new Student(3, 'Long', 'confused'),\r\n  new Student(4, 'Thao', 'Magneta'),\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { Student, STUDENTS } from './Student';\n\n@Component({\n  selector: 'app-binding2-radio',\n  templateUrl: './binding2-radio.component.html',\n  styleUrls: ['./binding2-radio.component.scss'],\n})\nexport class Binding2RadioComponent implements OnInit {\n  selectedStudent: Student;\n  students: Student[] = STUDENTS;\n  constructor() {}\n\n  ngOnInit(): void {\n    // init radio\n    this.selectedStudent = this.students[1];\n  }\n}\n","<div class=\"ng-binding2-radio-component-layout\">\n  <h1>binding2-radio.component.html: [(ngModel)]</h1>\n  <div>radio group: {{ selectedStudent | json }}</div>\n  <p>\n    <label *ngFor=\"let s of students\">\n      <!-- name = studentGroup: các radio cùng tên sẽ nhóm vào 1 group-->\n      <!-- [(ngModel)]=\"student\" binding 2 ways  -->\n      <!-- sẽ so sánh selectedStudent với [value] nếu bằng nhau thì là check, ko bằng nhau là uncheck -->\n      <input type=\"radio\" name=\"studentGroup\" [(ngModel)]=\"selectedStudent\" [value]=\"s\" />{{\n        s.name\n      }}\n    </label>\n    <label\n      ><input type=\"radio\" name=\"studentGroup\" (click)=\"selectedStudent = null\" />None of the\n      above</label\n    >\n  </p>\n</div>\n","import { Role, ROLES } from './roles';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-binding2-selection',\n  templateUrl: './binding2-selection.component.html',\n  styleUrls: ['./binding2-selection.component.scss'],\n})\nexport class Binding2SelectionComponent implements OnInit {\n  public roles: Role[] = ROLES;\n  public roleSelect: Role;\n  constructor() {}\n\n  ngOnInit(): void {\n    this.roleSelect = ROLES[1];\n  }\n}\n","<div class=\"ng-binding2-selection-component-layout\">\n  <h3>binding2-selection</h3>\n  <div>role: {{ roleSelect | json }}</div>\n\n  <div class=\"form-group\">\n    <label for=\"role\"><b>Role</b></label>\n    <select class=\"form-input\" id=\"role\" name=\"role\" [(ngModel)]=\"roleSelect\">\n      <!-- selection = so sánh [ngValue] với  [(ngModel)]=\"roleSelect\"-->\n      <!-- dùng [ngValue] thay cho [value]. [value] chỉ dùng cho String -->\n      <option *ngFor=\"let role of roles\" [ngValue]=\"role\">{{ role.name }}</option>\n    </select>\n  </div>\n</div>\n","export class Role {\n  // cách viết tắt khai bao biến trên TypeScript\n  constructor(public id: number, public name: string) {}\n}\n\nexport const ROLES: Role[] = [\n  new Role(1, 'admin'),\n  new Role(2, 'moderate'),\n  new Role(3, 'User'),\n  new Role(4, 'Support'),\n];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-binding2',\n  templateUrl: './binding2.component.html',\n  styleUrls: ['./binding2.component.scss']\n})\nexport class Binding2Component  {\n  name: string = '';\n  email: string ='';\n  password: string = '';\n  address:string='';\n\n  setName() {\n    this.name = 'Nancy';\n  }\n\n  setEmail(){\n    this.email = \"hung@gmail.com\";\n  }\n\n  setPassword(){\n    this.password = \"password 123\";\n  }\n\n  setUppercaseName(address:string){\n    this.address = address.toUpperCase();\n  }\n}\n","<div class=\"binding2-component-layout\">\n  <h1>binding2.component: binding 2 way </h1>\n  <p style=\"color: red;\"> cách 1: gộp @input [] và @output () vào làm 1 </p>\n  <p>\n    <span>Value: {{ name }}</span>\n    <br>\n    <label for=\"example-ngModel\">[(ngModel)]:</label>\n    <!-- two way binding = @input [] and @output () -->\n    <!-- <input> là trường hợp đặc biệt mới viết gọn thế này kết hợp () và [] -->\n    <!-- cân import FormsModule vào trong @ngModule mới đc -->\n    <!-- id: dung cho viec truy cap tu DOM hoac JQuery -->\n    <input type=\"text\" [(ngModel)]=\"name\" id=\"example-ngModel\">\n    <button (click)=\"setName()\" class=\"button\">Set value</button>\n  </p>\n\n  <p style=\"color: red;\"> tách @input [] và @ouput () có cái lợi là ta có thể bắt đc $event từ @output </p>\n  <p>\n    <span>Value: {{ email }}</span>\n    <br>\n    <label for=\"without\">without NgModel:</label>\n    <!-- @input = [], @output = () -->\n    <!-- $event = @output data cua input tag -->\n    <!-- $event: là local variable nên chỉ có tác dụng trong double quote \"\" -->\n    <!-- (input): là @output () -->\n    <!-- value: là @input [] -->\n    <input [value]=\"email\" (input)=\"email=$event.target.value\" id=\"without\">\n    <button (click)=\"setEmail()\" class=\"button\">Set value</button>\n  </p>\n\n  <p style=\"color: red;\"> dùng 2 cách dưới đây là hay nhất: [ngModel] và (ngModelChange) </p>\n  <p>\n    <span>Value: {{ password }}</span>\n    <br>\n    <label for=\"example-change\">(ngModelChange)=\"...name=$event\":</label>\n    <!-- @input = [], @output = () -->\n    <!-- $event = @output data cua input tag -->\n    <!-- () = \"javaExpression\" se dc trigger khi co @output event. ko dung $event van dc -->\n    <input [ngModel]=\"password\" (ngModelChange)=\"password=$event\" id=\"example-change\">\n    <button (click)=\"setPassword()\" class=\"button\">Set value</button>\n  </p>\n\n\n  <p>\n    <span>Value: {{ address }}</span>\n    <br>\n    <label for=\"example-uppercase\">(ngModelChange)=\"setUppercaseName($event)\"></label>\n    <!-- @input = [], @output = () -->\n    <!-- $event = @output data cua input tag -->\n    <!-- () = \"javaExpression\" se dc trigger khi co @output event. ko dung $event van dc -->\n    <input [ngModel]=\"address\" (ngModelChange)=\"setUppercaseName($event)\" id=\"example-uppercase\">\n    <button (click)=\"address='Hanoi'\" class=\"button\">Set value</button>\n  </p>\n\n  <p style=\"color: red;\">\n    @Output () event chỉ đc kích hoạt khi có sự thay đổi ở bên trong component input\n    <br>\n    thay đổi component từ bên ngoài sẽ ko kích hoạt @output () event\n    <br>\n    vd: click button là thay đổi từ bên ngoài nên setUppercaseName($event) ko đc gọi\n  </p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-diaglog',\n  templateUrl: './diaglog.component.html',\n  styleUrls: ['./diaglog.component.scss'],\n})\nexport class DiaglogComponent implements OnInit {\n  constructor() {}\n\n  private modal: HTMLElement;\n  ngOnInit(): void {\n    //========================== Hidden Dialog ==================\n    //  modal: là background full screen 100% bao quanh Dialog\n    this.modal = document.getElementById('dialog-id');\n\n    /**\n     * Event sẽ ưu tiên xử lý ở Child html tag trc:\n     * Vì thế khi click vào Dialog thì phần background sẽ ko bắt đc Event\n     */\n    window.onclick = (event) => {\n      // khi click bên ngoài Dialog phần background Modal\n      if (event.target == this.modal) {\n        // 'none' phần html sẽ ẩn đi mà ko chiếm kích thước\n        this.modal.style.display = 'none';\n      }\n    };\n  }\n}\n","<h2>diaglog.component:</h2>\n<p>\n  vd dialog ko dùng Angular Material component.\n  <br />\n  ta tự xây dựng cách truyền dữ liệu giữa Dialog component và parent component\n  <br />\n  mấu chôt nằm ở CSS\n  <br />\n  dùng cách này sẽ hiểu bản chất hơn (ko nên lệ thuộc vào Thư Viện mất thời gian đọc hiểu)\n</p>\n<p style=\"color: blue\">cách 1: dùng component @input[] / output() => xem vd github.</p>\n<p style=\"color: blue\">\n  cách 2: dùng Service Provider => Material Dialog cũng dùng cách này.\n  <br />\n  xem vd github Service Provider của Parent component\n</p>\n\n<button onclick=\"document.getElementById('dialog-id').style.display='block'\">show dialog</button>\n\n<!-- modal: là background full screen 100% bao quanh dialog-->\n<div id=\"dialog-id\" class=\"modal\">\n  <!-- modal-content: là phần xác định kích thước của Dialog -->\n  <div class=\"modal-content animate\">\n    <!-- phần child component nằm gọn trong dialog -->\n    <!-- phần này sẽ chuyền nhận dữ liệu với Parent component-->\n    <app-binding></app-binding>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-html-attribute',\n  templateUrl: './html-attribute.component.html',\n  styleUrls: ['./html-attribute.component.scss'],\n})\nexport class HtmlAttributeComponent implements OnInit {\n  url =\n    'https://thepowerofsmiling.com/wp-content/uploads/2014/11/Smile-Icon.png';\n  isDisable: boolean; // khởi tạo ở đây ko có ý nghĩa\n  isSpecial: boolean;\n  constructor() {}\n\n  ngOnInit(): void {\n    // phải khởi tạo ở đây sau khi html DOM đã đc khởi tạo\n    this.isDisable = true;\n    this.isSpecial = true;\n  }\n}\n","<div class=\"html-attribute-component-layout\">\n  <h1>html-attribute.component:</h1>\n  <p>\n    @input = [] cho các attribute chuẩn của html tag chuẩn: &lt;input&gt;, &lt;div&gt;,\n    &lt;image&gt;, &lt;a&gt;,...\n  </p>\n  <p>[src], [class], [style], [disabled], [] ...</p>\n  <!-- url là biến trên *.component.ts -->\n  <!-- src là attribute cua <img> tag -->\n  <img [src]=\"url\" />\n\n  <!-- buttonState = true/false -->\n  <button [disabled]=\"isDisable\" class=\"button-class\">disable button</button>\n\n  <!-- trong expression là javaScript. Lưu ý single quote -->\n  <!-- .button class ở SCSS file -->\n  <button [class.button]=\"isSpecial\" (click)=\"isSpecial = !isSpecial\">[class]</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-keyup',\n  templateUrl: './input-keyup.component.html',\n  styleUrls: ['./input-keyup.component.scss']\n})\nexport class InputKeyupComponent implements OnInit {\n  enterMessage: string = '';\n  blurMessage:string = '';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onEnter(message: string) { // with type info\n    this.enterMessage = message;\n  }\n\n  /**\n   * sẽ đc goi khi Edit input từ focus chuyển sang unfocus by clicking elsewhere\n   * @param message\n   */\n  onBlur(message: string) { // with type info\n    this.blurMessage = message;\n  }\n}\n","<!-- https://stackblitz.com/angular/oeredbxplak?file=src%2Fapp%2Flittle-tour.component.ts -->\n<div class=\"input-keyup-component-layout\">\n  <h1>input-keyup.component:</h1>\n  <h3>input #variable and (keyup):</h3>\n  <p style=\"color: red\">dùng binding 2ways hay hơn</p>\n  <!-- mỗi lần (keyup) angular sẽ cập nhật lại giá trị #box -->\n  <input #box (keyup)=\"(0)\" />\n  <p>{{ box.value }}</p>\n  <p>---------------------------------------------------------</p>\n\n  <h3>input (keyup.enter):</h3>\n  <p>press Enter sau khi type text</p>\n  <p style=\"color: red\">dùng binding 2ways [(ngModel)] kết hơp với (keyup.enter) là ok</p>\n  <input #box2 (keyup.enter)=\"onEnter(box2.value)\" />\n  <p>{{ enterMessage }}</p>\n  <p>---------------------------------------------------------</p>\n\n  <h3>input (blur):</h3>\n  <p style=\"color: red\">\n    (blur): là event sẽ đc goi khi Edit input từ focus chuyển sang unfocus by clicking elsewhere\n    <br />\n    vì thực tế dùng [(ngModel)] nên ít khi dùng (blur)\n  </p>\n  <input #box3 (blur)=\"onBlur(box3.value)\" />\n  <p>{{ blurMessage }}</p>\n\n  <p>---------------------------------------------------------</p>\n  <h3>input(keyup.enter) & (blur) & [(ngModel)]:</h3>\n  <p style=\"color: red\">thực tế thường áp dụng linh hoạt 3 cách trên</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ng-class',\n  templateUrl: './ng-class.component.html',\n  styleUrls: ['./ng-class.component.scss']\n})\nexport class NgClassComponent implements OnInit {\n  /**\n   * ngClass\n   */\n  isSaveable =  true;\n  isSpecial = true;\n  isModified = true;\n\n  currentClasses: {};\n\n  ngOnInit(): void {\n    this.setCurrentClasses();\n  }\n\n  setCurrentClasses() {\n    // JSON\n    this.currentClasses =  {\n      'saveable': this.isSaveable,\n      'modified': this.isModified,\n      'special':  this.isSpecial\n    };\n  }\n}\n","<div class=\"ng-class-component-layout\">\n  <hr />\n  <h1 id=\"ngClass\">ng-class.component: [ngClass]</h1>\n\n  <p>currentClasses is {{ currentClasses | json }}</p>\n\n  <!-- nếu viết tường minh như sau thì mỗi thành phần con đc update sẽ update CSS -->\n\n  <div [ngClass]=\"{ saveable: isSaveable, modified: isModified, special: isSpecial }\">\n    [ngClass]= \" cách 1\"\n  </div>\n  <div\n    [ngClass]=\"[\n      isSaveable ? 'saveable' : '',\n      isModified ? 'modified' : '',\n      isSpecial ? 'special' : ''\n    ]\"\n  >\n    [ngClass]= \" cách 2\"\n  </div>\n  <div [class.saveable]=\"isSaveable\" [class.modified]=\"isModified\" [class.special]=\"isSpecial\">\n    [class.ClassName] = cách 3\n  </div>\n\n  <!-- tip trick: dùng dòng này để Jump SCSS class ở trên-->\n  <!-- tên CSS ko đc trùng với tên biến trên TypeScript nếu ko sẽ Jump sai -->\n  <div class=\"saveable modified special\">jump SCSS in htlm</div>\n\n  <ul>\n    <li>\n      <label for=\"saveable\">saveable</label>\n      <input type=\"checkbox\" [(ngModel)]=\"isSaveable\" id=\"saveable\" />\n    </li>\n    <li>\n      <label for=\"modified\">modified:</label>\n      <input type=\"checkbox\" [(ngModel)]=\"isModified\" id=\"modified\" />\n    </li>\n    <li>\n      <label for=\"special\">special:</label>\n      <input type=\"checkbox\" [(ngModel)]=\"isSpecial\" id=\"special\" />\n    </li>\n  </ul>\n  <button (click)=\"setCurrentClasses()\">Refresh currentClasses</button>\n\n  <!-- currentClasses là biến chứa json. @input [] sẽ đc update nếu biến đc update  -->\n  <!-- nếu thành phần con của biến Json đc update thì nó sẽ ko update => phải tạo lại currentClasses -->\n  <div [ngClass]=\"currentClasses\">\n    This div should be {{ isSaveable ? '' : 'not' }} saveable,\n    {{ isModified ? 'unmodified' : 'modified' }} and {{ isSpecial ? '' : 'not' }} special after\n    clicking \"Refresh\".\n  </div>\n\n  <p style=\"color: red\">\n    nhược điểm NgClass: là ko jump đc CSS class khi\n    <span style=\"color: black\"> Ctrl + Click </span> ở html\n    <br />\n    vì trình Parser ko support parser ngClass => ta phải dùng tip trick\n    <br />\n    ngClass ko nên đc build ở trong TypeScript, như thế sẽ khó đọc code html\n    <br />\n    ngClass nên viết tường minh trong html code => như thế dễ nhìn. Và update đc khi từng thành phần\n    thay đổi.\n  </p>\n</div>\n","export class Customer {\r\n  id:number;\r\n  name: string;\r\n  age: number;\r\n  constructor(id: number, name: string, age: number){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.age = age;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Customer } from './Customer';\n\n@Component({\n  selector: 'app-ng-for',\n  templateUrl: './ng-for.component.html',\n  styleUrls: ['./ng-for.component.scss']\n})\nexport class NgForComponent implements OnInit {\n\n  items:Customer[] = [new Customer(1,\"hung\",14),new Customer(2,\"khien\",14),new Customer(3,\"kien\",14) ];\n  itemChangedIds:Customer[] = [new Customer(1,\"hungChanged\",14),new Customer(2,\"khien Ko changeId\",14),new Customer(5,\"kienChanged\",14) ];\n  itemChangedNames:Customer[] = [new Customer(1,\"hungChanged\",14),new Customer(2,\"khienChanged\",14),new Customer(3,\"kien\",14) ];\n  customers: Customer[];\n\n  custome1: Customer = new Customer(1,'chân chính',8);\n  constructor() { }\n\n  ngOnInit(): void {\n    this.customers = this.items;\n  }\n\n  clickButton(name:string){\n    window.alert(name);\n  }\n\n  resetList(){\n    this.customers = this.items;\n  }\n\n  changeIds(){\n    this.customers = this.itemChangedIds;\n  }\n\n  changeIds2(){\n    // ngay cả change thành phần của biến vẫn đc update vào html (lạ thật)\n    this.customers[0].name = 'hungchanged';\n  }\n\n  /**\n   *\n   * @param index : là vị trí trong array của *ngFor\n   * @param customer: là object của array tại vị trí index\n   */\n  trackById(index:number, customer: Customer): number{\n    return customer.id;\n  }\n\n    /**\n   *\n   * @param index : là vị trí trong array của *ngFor\n   * @param customer: là object của array tại vị trí index\n   */\n  trackByName(index:number, customer: Customer): string{\n    return customer.name;\n  }\n}\n","<div class=\"ngfor-component-layout\">\n  <h1>ng-for.component: *ngFor</h1>\n\n  <!-- **************************************************************** -->\n  <h3>example 1:</h3>\n  <p style=\"color: red;\">*ngFor=\"let customer of customers</p>\n  <p>customer.id : customer.name</p>\n\n  <ul class=\"ng-for-list-box\">\n    <li *ngFor=\"let customer of customers\">{{customer.id}} : {{customer.name}} </li>\n  </ul>\n\n  <!-- **************************************************************** -->\n  <h3> example 2: </h3>\n  <!-- vùng trong expression của (click) là JavaScript ko cần {{}} -->\n  <button class=\"button\" *ngFor=\"let customer of customers\" (click)=\"this.clickButton(customer.name)\">{{customer.name}}\n  </button>\n\n  <h3> *ngFor index:</h3>\n  <p style=\"color: red;\">*ngFor=\"let customer of customers; let i=index</p>\n  <p>index - customer.id : customer.name</p>\n\n  <ul class=\"ng-for-list-box\">\n    <li *ngFor=\"let customer of customers; let i=index\">{{i}} - {{customer.id}} : {{customer.name}}</li>\n  </ul>\n\n  <p>----------------------------------------------------------------------</p>\n  <!-- trackby: sẽ check  -->\n  <h3> *ngFor trackBy</h3>\n  <p style=\"color: red;\">*ngFor=\"let customer of customers; let i=index; trackBy: trackById</p>\n  <p>index - customer.id : customer.name</p>\n\n  <button (click)=\"resetList()\">Reset items</button>\n  <button (click)=\"changeIds()\">Change ids</button>\n\n\n  <div class=\"ng-for-list-box\">\n    <!-- index là biến local có giá trị trong double quote. \"i\" là biến toàn cục -->\n    <!-- trackById(index,customer): là function pointer. Ta phải implement nó ở typeScript -->\n    <!-- sẽ so sánh giá trị trả về của Array mới và cũ để update tại customer[index] -->\n    <div *ngFor=\"let customer of customers; let i=index; trackBy: trackById\">\n      {{i}} - {{customer.id}} : {{customer.name}}\n    </div>\n\n  </div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ng-if',\n  templateUrl: './ng-if.component.html',\n  styleUrls: ['./ng-if.component.scss']\n})\nexport class NgIfComponent implements OnInit {\n  // *ngIf\n  condition:boolean;  //khởi tạo ở đây sẽ ko update đc biến vào html\n  condition2:boolean;\n  condition3:boolean;\n\n  // show/hidden\n  isHidden:boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // khởi tạo ở đây sau khi DOM đc load => thì mới update đc vào html\n    this.condition = true;\n    this.condition2 = true;\n    this.condition3 = true;\n    this.isHidden = true;\n  }\n\n}\n","<div class=\"ng-if-component-layout\">\n  <h1>ng-if.component: *ngIf</h1>\n  <p>---------------------------------------------------------------------------------</p>\n  <p style=\"color: red\">*ngIf=\"condition\": Content is rendered when condition is true</p>\n\n  <div *ngIf=\"condition\">Content to render when condition is true.</div>\n\n  <button class=\"button\" (click)=\"condition = !condition\">*ngIf</button>\n\n  <p>---------------------------------------------------------------------------------</p>\n  <p style=\"color: red\">*ngIf=\"condition2; else elseBlock2\": dùng với ng-template</p>\n\n  <!-- ng-container: ko gen ra thẻ html. CSS ko có nghĩa ở đây. Dùng div thay thế ok -->\n  <ng-container *ngIf=\"condition2; else elseTemplate\">\n    <div class=\"if-block\">content là child của div</div>\n  </ng-container>\n  <!-- ng-temlate: phải đc dùng với elseBlock -->\n  <ng-template #elseTemplate>\n    <div class=\"else-block\">Content to render when condition is false.</div>\n  </ng-template>\n\n  <button class=\"button\" (click)=\"condition2 = !condition2\">*ngIf else</button>\n\n  <p>---------------------------------------------------------------------------------</p>\n  <p style=\"color: red\">*ngIf=\"condition; then thenBlock else elseBlock\": dùng với ng-template</p>\n  <!-- class CSS ko có ý nghĩa ở đây (tested) -->\n  <!-- thenBlock và elseBlock: là biến đc định nghĩa ở ng-template  -->\n  <div *ngIf=\"condition3; then thenBlock; else elseBlock\" class=\"ng-if-block\">\n    content là child của div\n  </div>\n\n  <!-- #thenBlock: là tên biến đại diện cho 1 instance ng-template -->\n  <ng-template #thenBlock>\n    <div class=\"if-block\">Content to render when condition is true.</div>\n  </ng-template>\n  <!-- #elseBlock: là tên biến đại diện cho 1 instance ng-template -->\n  <ng-template #elseBlock>\n    <div class=\"else-block\">Content to render when condition is false.</div>\n  </ng-template>\n\n  <button class=\"button\" (click)=\"condition3 = !condition3\">*ngIf then else</button>\n\n  <p>-----------------------------------------------------------------------------------</p>\n  <h2>show/hide vs *ngIf:</h2>\n  <p style=\"color: red\">\n    show/hide: là ẩn đi thôi, ko remove html khỏi DOM\n    <br />\n    *ngIf: là remove html khỏi DOM\n  </p>\n\n  <!-- dùng ng-hidden của angular (nên dùng): sẽ ẩn đi ko chiếm ko gian -->\n  <div [hidden]=\"isHidden\">show with [hidden]= \"isHidden\"</div>\n\n  <!-- object.style.visibility = \"visible|hidden|collapse|initial|inherit\" -->\n  <!-- hidden sẽ ẩn đi, nhưng vẫn chiếm ko gian -->\n  <div [style.visibility]=\"isHidden ? 'hidden' : 'visible'\">\n    [style.visibility] = hidden: ẩn đi vẫn chiếm ko gian\n  </div>\n  <!-- style.display là thuộc tính của div. none: sẽ không chiếm không gian  -->\n  <div [style.display]=\"isHidden ? 'none' : 'block'\">\n    Show with [style.display] = none: ẩn đi ko chiếm ko gian\n  </div>\n\n  <!-- .hidden là CSS class -->\n  <div [class.hidden]=\"isHidden\">show with class.hidden</div>\n\n  <button class=\"button\" (click)=\"isHidden = !isHidden\">Show/Hidden: {{ isHidden }}</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ng-style',\n  templateUrl: './ng-style.component.html',\n  styleUrls: ['./ng-style.component.scss']\n})\nexport class NgStyleComponent implements OnInit {\n\n  islargeFont:boolean; // khởi tạo ở đây sẽ ko đc load vào DOM\n  isHidden:boolean;\n  constructor() { }\n\n  /**\n   * Hàm này đc gọi sau khi html DOM đc create\n   */\n  ngOnInit(): void {\n    // khởi tạo ở đây sẽ sinh event để Update DOM có liên quan tới biến này\n    this.islargeFont = true;\n    this.isHidden = false;\n  }\n\n}\n","<div class=\"ng-style-component-layout\">\n  <h1>ng-style.component: [ngStyle]</h1>\n  <p style=\"color: red\">nên dùng [ngClass] thay cho [style.attribute] nếu có thể</p>\n\n  <div [style.font-size]=\"islargeFont ? 'x-large' : 'smaller'\">\n    [style.font-size]= x-large or smaller.\n  </div>\n\n  <button class=\"button\" (click)=\"islargeFont = !islargeFont\">\n    isLargeFont = {{ islargeFont }}\n  </button>\n\n  <p>----------------------------------------------------------------------</p>\n  <!-- object.style.visibility = \"visible|hidden|collapse|initial|inherit\" -->\n  <!-- hidden sẽ ẩn đi, nhưng vẫn chiếm ko gian -->\n  <div [style.visibility]=\"isHidden ? 'hidden' : 'visible'\">Show with style.visibility =</div>\n  <!-- style.display là thuộc tính của div. none: sẽ không chiếm không gian  -->\n  <div [style.display]=\"isHidden ? 'none' : 'block'\">Show with style.display = none</div>\n\n  <button class=\"button\" (click)=\"isHidden = !isHidden\">Show/Hidden: {{ isHidden }}</button>\n</div>\n","export class Hero {\r\n  id: number;\r\n  name: string;\r\n  emotion: string;\r\n\r\n  constructor(id: number, name: string, emotion: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.emotion = emotion;\r\n  }\r\n}\r\n\r\nexport const heroes: Hero[] = [\r\n  new Hero(1, 'hungbeo', 'happy'),\r\n  new Hero(2, 'Hunggay', 'sad'),\r\n  new Hero(3, 'Long', 'confused'),\r\n  new Hero(4, 'Thao', 'Magneta')\r\n];\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Hero, heroes } from './Hero';\n\n@Component({\n  selector: 'app-ng-switch',\n  templateUrl: './ng-switch.component.html',\n  styleUrls: ['./ng-switch.component.scss'],\n})\nexport class NgSwitchComponent implements OnInit {\n  hero: Hero;\n  heroes:Hero[] = heroes;\n  constructor() {}\n\n  ngOnInit(): void {\n    // select radio button\n    this.hero = heroes[1];\n  }\n}\n","<div class=\"ng-switch-component-layout\">\n  <h1>ng-switch.component:</h1>\n  <p>ngSwitch sẽ delete DOM cũ và tạo mới DOM</p>\n  <h3 style=\"color: blue;\">radio group: {{hero|json}} </h3>\n  <p>\n    <label *ngFor=\"let h of heroes\">\n      <!-- name = radioGroupName: nhóm tất cả các radio vào 1 group -->\n      <!-- [(ngModel)]=\"hero\" binding 2 ways  -->\n      <!-- sẽ so sánh hero với [value] nếu bằng nhau thì selection -->\n      <input type=\"radio\" name=\"radioGroupName\" [(ngModel)]=\"hero\" [value]=\"h\">{{h.name}}\n    </label>\n    <label><input type=\"radio\" name=\"radioGroupName\" (click)=\"hero = null\">None of the above</label>\n  </p>\n\n  <h4>NgSwitch</h4>\n\n  <!-- dấu \"?\" là optional. dùng để check null trc khi thực hiện -->\n  <div [ngSwitch]=\"hero?.emotion\">\n    <div *ngSwitchCase=\"'happy'\">{{hero|json}}</div>\n    <div *ngSwitchCase=\"'sad'\">{{hero|json}}</div>\n    <div *ngSwitchCase=\"'confused'\">{{hero|json}}</div>\n    <div *ngSwitchCase=\"'Magneta'\">{{hero|json}}</div>\n    <div *ngSwitchDefault> switch default</div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss'],\n})\nexport class TextEditorComponent implements OnInit {\n  output: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h2>text-editor.component:</h2>\n\n<h2>Preview: binding</h2>\n<p>\n  angular sẽ convert &lt;&gt; sang ký tự đặc biệt của XML\n  <br />\n  xem vd: security-innerHtml-editor\n</p>\n<div class=\"preview-layout\">{{ output }}</div>\n\n<textarea\n  id=\"my-textarea\"\n  class=\"editor\"\n  [(ngModel)]=\"output\"\n  name=\"Comments\"\n  placeholder=\"Comments\"\n></textarea>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}